<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:message="clr-namespace:ZappChat_v3.Core.Messaging">
    <DataTemplate x:Key="OutgoingTextMessage" DataType="{x:Type message:Message}">
        <Grid>
            <Border x:Name="Br" CornerRadius="10" Background="{StaticResource ZappChat.Sky}"  HorizontalAlignment="Right" Margin="40,0,7,0">
                <TextBox Text="{Binding Text}" 
                     Foreground="White" 
                     Background="Transparent" 
                     BorderBrush="{x:Null}" 
                     IsReadOnly="True" FontFamily="HelveticaNeueCyr" FontSize="14.667" FontWeight="Normal" TextWrapping="Wrap" Margin="20" HorizontalContentAlignment="Left" VerticalContentAlignment="Top" TextAlignment="Left"/>
            </Border>
            <Path Data="M85.319856,41.589193 C85.437792,43.7223 85.383233,44.125972 85.541577,46.367979 84.899471,49.674712 89.039168,56.233926 91.731291,56.588518 87.716253,56.634535 81.7077,55.824947 79.722233,52.010215" Fill="{DynamicResource ZappChat.Sky}" HorizontalAlignment="Right" Height="16.285" Margin="0,0,0,0.101" Stretch="Fill" Stroke="{x:Null}" VerticalAlignment="Bottom" Width="13.542"/>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="IncomingTextMessage" DataType="{x:Type message:Message}">
        <Grid>
            <Border x:Name="Br" CornerRadius="10" Background="{StaticResource ZappChat.Dirt}"  HorizontalAlignment="Left" Margin="5,0,40,0">
                <TextBox Text="{Binding Text}" 
                     Foreground="Black" 
                     Background="Transparent" 
                     BorderBrush="{x:Null}" 
                     IsReadOnly="True" FontFamily="HelveticaNeueCyr" FontSize="14.667" FontWeight="Normal" TextWrapping="Wrap" Margin="20" HorizontalContentAlignment="Left" VerticalContentAlignment="Top" TextAlignment="Left"/>
            </Border>
            <Path Data="M85.319856,41.589193 C85.437792,43.7223 85.383233,44.125972 85.541577,46.367979 84.899471,49.674712 89.039168,56.233926 91.731291,56.588518 87.716253,56.634535 81.7077,55.824947 79.722233,52.010215" Fill="{DynamicResource ZappChat.Dirt}" HorizontalAlignment="Left" Height="15.784" Margin="0,0,46.439,-0.273" Stretch="Fill" Stroke="{x:Null}" VerticalAlignment="Bottom" Width="9" RenderTransformOrigin="0.5,0.5">
                <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="-1"/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </Grid>
    </DataTemplate>
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>